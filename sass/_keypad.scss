.keypad {
  background-color: var(--color-bg-sec);
  grid-column: 1/ -1;
  grid-row: 3 / 4;
  height: 42rem;
  padding: 2.5rem;
  border-radius: 1rem;
  justify-content: center;
  display: grid;

  grid-template-rows: repeat(5, 1fr);
  grid-template-columns: repeat(4, minmax(4rem, 10rem));
  gap: 2rem;
  transition: background-color 0.2s;

  @media only screen and (max-width: 75em) {
    gap: 1.5rem;
  }

  &__key {
    display: flex;
    justify-content: center;
    align-items: center;
    height: calc(100% - 0.5rem);
    width: 100%;
    border-radius: 0.75rem;
    font-size: $font-size;
    z-index: 10;
    position: relative;
    transition: all 0.2s;
    cursor: grab;

    &:active {
      transform: translateY(0.5rem);
      cursor: grabbing;

      &:last-child {
        bottom: 0;
      }
    }

    &-value {
      transform: translateY(3px);
    }

    &--main {
      background-color: var(--color-key-main-bg);
      color: var(--color-text-nums);

      @include key-bottom(var(--color-key-main-shadow));
      @include brighten;
    }

    &--back {
      background-color: var(--color-key-back-bg);
      color: var(--color-text-back);
      text-transform: uppercase;
      font-size: 2.25rem;

      @include key-bottom(var(--color-key-back-shadow));
      @include brighten;
    }

    &--equals {
      background-color: var(--color-key-toggle-bg);
      color: var(--color-text-equals);
      font-size: 2rem;

      @include key-bottom(var(--color-key-toggle-shadow));
      @include brighten;
    }
  }
}

[data-val="reset"] {
  grid-column: 1 / 3;
}

[data-val="="] {
  grid-column: 3 / 5;
}

.keypad__key:active::after {
  transform: translateY(-0.5rem);
}

.active {
  filter: brightness(112.5%);
  transform: translateY(0.5rem);

  &::after {
    content: "";
    display: block;
    width: 100%;
    height: 1rem;
    position: absolute;
    left: 0;
    bottom: 0;
    border-bottom-left-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;

    z-index: 5;
    transition: all 0.2s;
  }
}
